{"version":3,"sources":["api/todos.ts","api/users.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","TodoForm","handleSubmit","handleTitleInput","handleUserSelect","formInputs","errorStatuses","firstOptionDisabled","onSubmit","className","type","placeholder","value","onChange","disabled","usersFromServer","map","user","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","App","useState","todosFromServer","setTodos","setFirstOptionDisabled","setFormInputs","setErrorStatuses","todosWithUsers","find","event","target","statuses","preventDefault","maxId","reduce","max","Infinity","input","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a2809df.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\nconst TITLE_ERROR_MSG = 'Please enter a title';\nconst USER_ERROR_MSG = 'Please choose a user';\n\ninterface Props {\n  handleSubmit: (event: React.FormEvent) => void;\n  handleTitleInput: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleUserSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n\n  formInputs: {\n    title: string;\n    userId: number;\n  };\n  firstOptionDisabled: boolean;\n  errorStatuses: {\n    title: boolean,\n    user: boolean,\n  };\n}\n\nexport function TodoForm({\n  handleSubmit,\n  handleTitleInput,\n  handleUserSelect,\n  formInputs,\n  errorStatuses,\n  firstOptionDisabled,\n}: Props) {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Please enter a title\"\n          value={formInputs.title}\n          onChange={handleTitleInput}\n        />\n\n        {errorStatuses.title && (\n          <span className=\"error\">\n            {TITLE_ERROR_MSG}\n          </span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          value={formInputs.userId}\n          data-cy=\"userSelect\"\n          onChange={handleUserSelect}\n        >\n          <option value=\"0\" disabled={firstOptionDisabled}>\n            Ð¡hoose a user\n          </option>\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {errorStatuses.user && (\n          <span className=\"error\">\n            {USER_ERROR_MSG}\n          </span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n}\n","import User from '../../interfaces/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo = ({ user }: Props) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport Todo from '../../interfaces/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo = ({\n  todo: {\n    id, title, completed, user,\n  },\n}: Props) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import Todo from '../../interfaces/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [firstOptionDisabled, setFirstOptionDisabled] = useState(false);\n  const [formInputs, setFormInputs] = useState({\n    title: '',\n    userId: 0,\n  });\n  const [errorStatuses, setErrorStatuses] = useState({\n    title: false,\n    user: false,\n  });\n\n  const todosWithUsers = todos.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId),\n  }));\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!formInputs.title) {\n      setErrorStatuses(statuses => ({\n        ...statuses,\n        title: true,\n      }));\n    }\n\n    if (formInputs.userId <= 0) {\n      setErrorStatuses(statuses => ({\n        ...statuses,\n        user: true,\n      }));\n    }\n\n    if (formInputs.userId <= 0 || !formInputs.title) {\n      return;\n    }\n\n    const maxId = todos.reduce((max, todo) => {\n      if (todo.id > max) {\n        return todo.id;\n      }\n\n      return max;\n    }, -Infinity);\n\n    setTodos([\n      ...todos,\n      {\n        id: maxId + 1,\n        title: formInputs.title,\n        completed: false,\n        userId: formInputs.userId,\n      },\n    ]);\n\n    setFormInputs({\n      title: '',\n      userId: 0,\n    });\n  };\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value.replace(/[^a-zA-ZÐ°-ÑÐ-Ð¯0-9 ]/gi, '');\n\n    setFormInputs({\n      ...formInputs,\n      title: input,\n    });\n    setErrorStatuses(statuses => ({\n      ...statuses,\n      title: false,\n    }));\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFormInputs({\n      ...formInputs,\n      userId: +event.target.value,\n    });\n    setFirstOptionDisabled(true);\n    setErrorStatuses(statuses => ({\n      ...statuses,\n      user: false,\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        handleUserSelect={handleUserSelect}\n        handleSubmit={handleSubmit}\n        handleTitleInput={handleTitleInput}\n        formInputs={formInputs}\n        errorStatuses={errorStatuses}\n        firstOptionDisabled={firstOptionDisabled}\n      />\n\n      <TodoList todos={todosWithUsers} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}