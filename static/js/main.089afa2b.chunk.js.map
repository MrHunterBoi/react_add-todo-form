{"version":3,"sources":["api/todos.ts","api/users.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","TodoForm","props","onSubmit","handleSubmit","className","type","placeholder","value","formInputs","onChange","handleTitleInput","titleErrorMessage","handleUserSelect","disabled","firstOptionDisabled","usersFromServer","map","user","userErrorMessage","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","App","useState","todosFromServer","setTodos","setFirstOptionDisabled","setFormInputs","setTitleErrorMessage","setUserErrorMessage","todosWithUsers","find","u","event","target","preventDefault","maxId","reduce","max","Infinity","input","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.089afa2b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\ninterface Props {\n  handleSubmit: (event: React.FormEvent) => void;\n  handleTitleInput: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleUserSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n\n  formInputs: {\n    title: string;\n    userId: number;\n  };\n  titleErrorMessage: string;\n  firstOptionDisabled: boolean;\n  userErrorMessage: string;\n}\n\nexport function TodoForm(props: Props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Please enter a title\"\n          value={props.formInputs.title}\n          onChange={props.handleTitleInput}\n        />\n\n        {props.titleErrorMessage && (\n          <span className=\"error\">\n            {props.titleErrorMessage}\n          </span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          value={props.formInputs.userId}\n          data-cy=\"userSelect\"\n          onChange={props.handleUserSelect}\n        >\n          <option value=\"0\" disabled={props.firstOptionDisabled}>\n            Сhoose a user\n          </option>\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {props.userErrorMessage && (\n          <span className=\"error\">\n            {props.userErrorMessage}\n          </span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n}\n","import User from '../../interfaces/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo = ({ user: { email, name } }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport Todo from '../../interfaces/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo = ({\n  todo: {\n    id, title, completed, user,\n  },\n}: Props) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import Todo from '../../interfaces/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [firstOptionDisabled, setFirstOptionDisabled] = useState(false);\n  const [formInputs, setFormInputs] = useState({\n    title: '',\n    userId: 0,\n  });\n  const [titleErrorMessage, setTitleErrorMessage] = useState('');\n  const [userErrorMessage, setUserErrorMessage] = useState('');\n\n  const todosWithUsers = todos.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(u => u.id === todo.userId),\n  }));\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!formInputs.title) {\n      setTitleErrorMessage('Please enter a title');\n    }\n\n    if (formInputs.userId <= 0) {\n      setUserErrorMessage('Please choose a user');\n    }\n\n    if (formInputs.userId <= 0 || !formInputs.title) {\n      return;\n    }\n\n    const maxId = todos.reduce((max, todo) => {\n      if (todo.id > max) {\n        return todo.id;\n      }\n\n      return max;\n    }, -Infinity);\n\n    setTodos([\n      ...todos,\n      {\n        id: maxId + 1,\n        title: formInputs.title,\n        completed: false,\n        userId: formInputs.userId,\n      },\n    ]);\n\n    setFormInputs({\n      title: '',\n      userId: 0,\n    });\n  };\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value.replace(/[^a-zA-Zа-яА-Я0-9 ]/gi, '');\n\n    setFormInputs({\n      ...formInputs,\n      title: input,\n    });\n    setTitleErrorMessage('');\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFormInputs({\n      ...formInputs,\n      userId: +event.target.value,\n    });\n    setFirstOptionDisabled(true);\n    setUserErrorMessage('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        handleUserSelect={handleUserSelect}\n        handleSubmit={handleSubmit}\n        handleTitleInput={handleTitleInput}\n        formInputs={formInputs}\n        titleErrorMessage={titleErrorMessage}\n        userErrorMessage={userErrorMessage}\n        firstOptionDisabled={firstOptionDisabled}\n      />\n\n      <TodoList todos={todosWithUsers} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}